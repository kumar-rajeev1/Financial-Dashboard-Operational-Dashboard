 ----Monthly Revenue IPD/OPD

SELECT
    TO_CHAR(DATE_TRUNC('month', "Bill Date"), 'Month') AS "Month",
    "Service Type",
    SUM("Revenue") AS "Total_Revenue"
FROM
    billing
WHERE
    "Service Type" IN ('IPD', 'OPD')
GROUP BY
    DATE_TRUNC('month', "Bill Date"),
    "Service Type"
ORDER BY
    DATE_TRUNC('month', "Bill Date") DESC,
    "Service Type";






 ---- Breakup of Revenue (Cash/Corporate/TPA)
select sum("Revenue"), "Revenue Type" from billing group by "Revenue Type";



----Outstanding report (Corporate / TPA) with Aging
SELECT 
 
    "Revenue Type",
	
    "Outstanding Amount",
	
    
    (CURRENT_DATE - "Bill Date"::date) AS "AgingDays"
FROM
    billing
WHERE
    "Payment Status" = 'Pending'
    AND "Revenue Type" IN ('Corporate', 'TPA')
	
ORDER BY
    "AgingDays" DESC;




--same like above mention/choose your require details
SELECT
    "Bill ID",
    "Patient ID",
    "Bill Date",
    "Service Type",
    "Revenue",
    "Revenue Type",
    "Outstanding Amount",
    "Payment Status",
    (CURRENT_DATE - "Bill Date"::date) AS "AgingDays"
FROM
    billing
WHERE
    "Payment Status" = 'Pending'
    AND "Revenue Type" IN ('Corporate', 'TPA')
ORDER BY
    "AgingDays" DESC;






------  Procurement cost (Inventory/Consumables/CAPEX)
select sum("Total Cost"),"Category" from procurement group by "Category" 


--Overheads
select "Expense Type", sum("Amount") from Overheads group by "Expense Type"  ----Overheads



 --------- GST Paid / ITC Claimed
SELECT 
    "Date",
    "GST Paid",
    "ITC Claimed",
    CASE 
        WHEN "ITC Claimed" = 0 THEN NULL
        ELSE ROUND(("GST Paid"::numeric / "ITC Claimed"::numeric), 2)
    END AS "GST_ITC_Ratio"
FROM
    financials
ORDER BY
    "Date" DESC;


 --------- GST Paid / ITC Claimed monthly wise
SELECT 
    TO_CHAR(DATE_TRUNC('month', "Date"), 'Month YYYY') AS "Month",
    SUM("GST Paid") AS "Total_GST_Paid",
    SUM("ITC Claimed") AS "Total_ITC_Claimed",
    CASE 
        WHEN SUM("ITC Claimed") = 0 THEN NULL
        ELSE ROUND((SUM("GST Paid")::numeric / SUM("ITC Claimed")::numeric), 2)
    END AS "GST_ITC_Ratio"
FROM
    financials
GROUP BY
    DATE_TRUNC('month', "Date")
ORDER BY
    DATE_TRUNC('month', "Date") DESC;








--Total TDS
SELECT
   
    sum("TDS Paid") As "Total TDS"
FROM
    financials

	


----- Cash flow Statement. 
SELECT
    "Date",
    "Cash In",
    "Cash Out",
    ("Cash In" - "Cash Out") AS "Net Cash Flow"
FROM
    financials
ORDER BY
    "Date" DESC;



----- Cash flow Statemet Monthly wise
SELECT
    TO_CHAR(DATE_TRUNC('month', "Date"), 'Month YYYY') AS "Months",
    SUM("Cash In") AS "Total_Cash_In",
    SUM("Cash Out") AS "Total_Cash_Out",
    (SUM("Cash In") - SUM("Cash Out")) AS "Net_Cash_Flow"
FROM
    financials
GROUP BY
    DATE_TRUNC('month', "Date")
ORDER BY
    DATE_TRUNC('month', "Date") DESC;



 --- Stock value
select sum("Stock Value") as Total_Stock_Value from financials 



---- Manpower engaged (On Payroll/Contract/Professional/Sub contractor)
SELECT
    "Employee Type",
    COUNT("Employee ID") AS "Manpower Count" from
    HR
GROUP BY
    "Employee Type"
ORDER BY
    "Employee Type";


---- Manpower cost (Salary/OT/Professional fees) 
SELECT     "Employee Type",     COUNT("Employee ID") AS "Manpower Count",
sum("Salary"+"OT"+"Professional Fees") 
as "Total_Spent" FROM  
HR GROUP BY     "Employee Type" ORDER BY     "Employee Type";



---Nursing Staff Details
select * from public.nursing_staff;





-----IP Admission (Per Day/Week/Month)
SELECT
    (SELECT COUNT(DISTINCT DATE_TRUNC('month', "Admission Date")) FROM  public.patient_admissions) AS "Monthly",
    (SELECT COUNT(DISTINCT DATE_TRUNC('week', "Admission Date")) FROM  public.patient_admissions) AS "Weekly",
    (SELECT COUNT(DISTINCT DATE("Admission Date")) FROM  public.patient_admissions) AS "Day";




-----IP Admission (Per Day/Week/Month)
SELECT
    'Daily' AS "Period",
    COUNT(DISTINCT DATE_TRUNC('month', "Admission Date")) AS "Count"
FROM
    public.patient_admissions

UNION ALL

SELECT
    'Weekly' AS "Period",
    COUNT(DISTINCT DATE_TRUNC('week', "Admission Date")) AS "Count"
FROM
    public.patient_admissions

UNION ALL

SELECT
    'Monthly' AS "Period",
    COUNT(DISTINCT DATE("Admission Date")) AS "Count"
FROM
    public.patient_admissions;






SELECT
    'Daily' AS "Period",
    COUNT(DISTINCT DATE_TRUNC('month', "Admission Date")) AS "Count"
FROM
    public.patient_admissions

UNION ALL

SELECT
    'Weekly' AS "Period",
    COUNT(DISTINCT DATE_TRUNC('week', "Admission Date")) AS "Count"
FROM
    public.patient_admissions

UNION ALL

SELECT
    'Monthly' AS "Period",
    COUNT(DISTINCT DATE("Admission Date")) AS "Count"
FROM
    public.patient_admissions;


-------------OP Procedure/IP Procedure
SELECT
    "Procedure Type",
    COUNT("Procedure ID") AS "Total Procedures"
FROM
    public.procedures
GROUP BY
    "Procedure Type";






----- Surgery/Cathlab Count (Daily/Weekly/Month)

SELECT
    'Monthly' AS "Time_Period",
    COUNT(DISTINCT DATE_TRUNC('month', "Procedure Date")) AS "Count"
FROM
    public.procedures
WHERE
    "Procedure Type" IN ('IP Procedure', 'OP Procedure')

UNION ALL

SELECT
    'Weekly' AS "Time_Period",
    COUNT(DISTINCT DATE_TRUNC('week', "Procedure Date")) AS "Count"
FROM
    public.procedures
WHERE
    "Procedure Type" IN ('IP Procedure', 'OP Procedure')

UNION ALL

SELECT
    'Daily' AS "Time_Period",
    COUNT(DISTINCT "Procedure Date") AS "Count"
FROM
    public.procedures
WHERE
    "Procedure Type" IN ('IP Procedure', 'OP Procedure');



Correct query----



SELECT
    'Monthly' AS "Time_Period",
    "Procedure Type",
    COUNT(*) AS "Total_Surgeries",
    SUM(CASE WHEN "Procedure Type" = 'IP Procedure' THEN 1 ELSE 0 END) AS "Total_Cathlab"
FROM public.procedures
GROUP BY "Procedure Type"

UNION ALL

-- Weekly Count
SELECT
    'Weekly' AS "Time_Period",
    "Procedure Type",
    COUNT(*) AS "Total_Surgeries",
    SUM(CASE WHEN "Procedure Type" = 'IP Procedure' THEN 1 ELSE 0 END) AS "Total_Cathlab"
FROM public.procedures
GROUP BY "Procedure Type"

UNION ALL

-- Daily Count
SELECT
    'Daily' AS "Time_Period",
    "Procedure Type",
    COUNT(*) AS "Total_Surgeries",
    SUM(CASE WHEN "Procedure Type" = 'IP Procedure' THEN 1 ELSE 0 END) AS "Total_Cathlab"
FROM public.procedures
GROUP BY "Procedure Type";




--------------------------





----------   Bed Occupancy   Category Wise % of occupancy (Daily/Weekly/Month)
WITH AllOccupancy AS (
    SELECT
        "Ward" AS ward,
        "Admission Date" AS period_date,
        SUM(EXTRACT(DAY FROM ("Discharge Date" - "Admission Date") * "Bed Occupied")) AS occupied_days
    FROM
        public.patient_admissions
    GROUP BY
        "Ward", "Admission Date"
)
SELECT
    'Daily' AS "Period_Type",
    ward AS "Category",
    AVG(
        (occupied_days * 100.0) / (SELECT 100)
    ) AS "Occupancy_%"
FROM
    AllOccupancy
GROUP BY
    ward

UNION ALL

SELECT
    'Weekly' AS "Period_Type",
    ward AS "Category",
    AVG(
        (occupied_days * 100.0) / (7 * (SELECT 100))
    ) AS "Occupancy_%"
FROM
    AllOccupancy
GROUP BY
    ward

UNION ALL

SELECT
    'Monthly' AS "Period_Type",
    ward AS "Category",
    AVG(
        (occupied_days * 100.0) / (EXTRACT(DAY FROM (DATE_TRUNC('month', period_date) + INTERVAL '1 month' - DATE_TRUNC('month', period_date))) * (SELECT 100))
    ) AS "Occupancy_%"
FROM
    AllOccupancy
GROUP BY
    ward;





-----Health Checkup Nos (Conversion into IP) (Monthly)

SELECT
    TO_CHAR("Admission Date", 'Month') AS "Month_Name",
    COUNT("Admission ID") AS "Health_Checkup_to_IP_Conversions"
FROM
    public.patient_admissions
WHERE
    "Referral Source" = 'OP'
GROUP BY
    "Month_Name"
ORDER BY
    MIN("Admission Date");


----Corrected Above query


SELECT 
    TO_CHAR("Procedure Date", 'Month') AS "Month_Name",
    COUNT(CASE WHEN "Procedure Type" = 'OP Procedure' THEN 1 END) AS "Total Health Checkups",
    COUNT(CASE WHEN "Procedure Type" = 'IP Procedure' THEN 1 END) AS "Converted_to_IP",
    ROUND(
        COUNT(CASE WHEN "Procedure Type" = 'IP Procedure' THEN 1 END)::numeric 
        / NULLIF(COUNT(CASE WHEN "Procedure Type" = 'OP Procedure' THEN 1 END), 0) , 
        2
    ) AS "Conversion_Percentage%"
FROM procedures
GROUP BY TO_CHAR("Procedure Date", 'Month'), DATE_TRUNC('month', "Procedure Date")
ORDER BY DATE_TRUNC('month', "Procedure Date");





















 --TPA Nos (Comparative Patient discharge/Claim launched/Settled)

 SELECT
    "TPA",
    COUNT("Admission ID") AS "Discharged_Patients"
FROM
    public.patient_admissions
WHERE
    "Discharge Date" IS NOT NULL
GROUP BY
    "TPA"
ORDER BY
    "TPA";

Corrected query with condition Match



SELECT
    "TPA",
    COUNT("Admission ID") FILTER (WHERE "Discharge Date" IS NOT NULL) AS "Discharged_Patients",
    COUNT("Admission ID") FILTER (WHERE "Claim Launched Date" IS NOT NULL) AS "Claims_Launched",
    COUNT("Admission ID") FILTER (WHERE "Claim Settled Date" IS NOT NULL) AS "Claims_Settled"
FROM
    public.patient_admissions
WHERE
    "TPA" IS NOT NULL
GROUP BY
    "TPA"
ORDER BY
    "TPA";


-----------------------
-----Referral Details (OP/IP)
SELECT
    DATE_TRUNC('month', "Referral Date") AS "Month",  --TO_CHAR("Referral Date", 'Month') AS "Month_Name",
    "Referral Type",
    COUNT("Patient ID") AS "Number_of_Referrals"
FROM
    public.referral
GROUP BY
    "Month", "Referral Type"
ORDER BY
    "Month", "Referral Type";




-- If montly Referral detials
SELECT
    TO_CHAR("Referral Date", 'Month') AS "Month_Name",
    "Referral Type",
    COUNT("Patient ID") AS "Number_of_Referrals"
FROM
    public.referral
GROUP BY
    "Month_Name", "Referral Type"
ORDER BY
    MIN("Referral Date");








 